@use "sass:map";
$break-points: (
  "tablet": 768px,
  "tablet-lg": 1080px,
);
@mixin respond-below($break-point) {
  @if map.has-key($break-points, $break-point) == true {
    $break-point-val: map.get($break-points, $break-point);
    @media (max-width: "#{$break-point-val - 1px}") {
      @content;
    }
  } @else {
    @error "Break-point #{$break-point} is part of the defined break-points";
  }
}

@mixin respond-above($break-point) {
  @if map.has-key($break-points, $break-point) {
    $break-point-val: map.get($break-points, $break-point);
    @media (min-width: $break-point-val) {
      @content;
    }
  } @else {
    @error "Break-point #{$break-point} is part of the defined break-points";
  }
}

@mixin gradient-animation($isText: false) {
  @if $isText {
    -webkit-background-clip: text;
    background-clip: text;
    color: transparent;
  }

  background-image: linear-gradient(
    to left,
    #1962cf 0%,
    #00ff00 50%,
    #cf1512 100%
  );

  background-size: 400%;
  animation: animatedText 5s infinite alternate;
  @keyframes animatedText {
    0% {
      background-position: left;
    }
    100% {
      background-position: right;
    }
  }
}

@mixin glassmorphic-bg($hover-effect: true) {
  color: $secondary-color;

  backdrop-filter: blur(25px) saturate(200%);
  -webkit-backdrop-filter: blur(25px) saturate(200%);
  background-color: rgba(80, 80, 80, 0.29);
  border-radius: 12px;
  border: 1px solid rgba(255, 255, 255, 0.125);
  box-shadow: $box-shadow-default;

  @if $hover-effect {
    @include respond-above(tablet) {
      transition: 0.15s linear all;
      &:hover {
        background: $bg-gradient;
        box-shadow: 5px 5px 10px #13171c, -5px -5px 10px #191f24;
      }
    }
  }
}
